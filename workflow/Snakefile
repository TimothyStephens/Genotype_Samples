#container: "docker://timothystephens/genotype_samples:latest"

from snakemake.utils import min_version
min_version("6.5")


configfile: "workflow/config.default.yaml"

report: "report/workflow.rst"


include: "rules/common.smk"
include: "rules/ref.smk"
include: "rules/download.smk"
include: "rules/trimming.smk"
include: "rules/mapping.smk"
include: "rules/calling.smk"
include: "rules/qc.smk"
include: "rules/cross-mapping.smk"
include: "rules/kmer_analysis.smk"
include: "rules/multiqc.smk"
include: "rules/relatedness.smk"
include: "rules/ploidy.smk"
include: "rules/annotations.smk"
include: "rules/plotting.smk"


DONE_WORKFLOW = "results/{project_name}/{module_name}.done".format(
	project_name=config["project_name"], 
	module_name=config["module"],
)


localrules:
	all,
	genotyping,
	cross_mapping,
	kmer_analysis,


rule all:
	input:
		DONE_WORKFLOW,


rule genotyping:
	input:
		rules.format_filtered_VCF.output,
		rules.format_results_NgsRelate.output,
		rules.format_results_PCAngsd_WithOutIndAlleleFreq.output,
		rules.multiqc_reads.output,
		rules.multiqc_variant_calls.output,
		rules.plotting_ANGSD_results.output.html,
		rules.plotting_vcf_clone_detect_results.output.html,
		rules.plotting_vcftools_relatedness2_results.output.html,
		rules.plotting_nQuire_delta_loglikelihood_results.output,
		rules.plotting_nQuire_coverage_results.output,
	output:
		touch("results/{project}/genotyping.done"),


rule cross_mapping:
	input:
		rules.multiqc_crossMapping.output,
		rules.plotting_cross_mapping_results.output.html,
	output:
		touch("results/{project}/cross_mapping.done"),


rule kmer_analysis:
	input:
		rules.multiqc_reads.output,
		lambda wildcards: expand(
			"results/{project}/kmer_analysis/{sample}.kmer_analysis_results.html",
			sample=samples.loc[samples['lib_type'].str.startswith('dna')].sample_id.unique(),
			project=wildcards.project,
		),
	output:
		touch("results/{project}/kmer_analysis.done"),


